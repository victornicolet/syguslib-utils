(set-logic LIA)
(synth-fun c0 () Int ((Ix Int) (Ic Int) (Ipred Bool))
 ((Ix Int (Ic (- Ix) (+ Ix Ix) (ite Ipred Ix Ix))) (Ic Int ((Constant Int)))
  (Ipred Bool ((= Ix Ix) (> Ix Ix) (not Ipred) (and Ipred Ipred) (or Ipred Ipred)))))
(declare-var input Int)
(declare-var i Int)
(declare-var p Int)
(declare-var i0 Int)
(declare-var i1 Int)
(constraint (or (not (> input i)) (= (+ (+ i0 i1) (ite (> p input) p 0)) c0)))
(check-synth)
