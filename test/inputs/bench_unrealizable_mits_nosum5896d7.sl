(set-logic LIA)
(define-fun max ((x Int) (y Int)) Int (ite (>= x y) x y))
(synth-fun join1 ((x2 Int) (x3 Int) (x4 Int)) Int ((Ix Int) (Ic Int))
 ((Ix Int (Ic x2 x3 x4 (- Ix) (+ Ix Ix) (max Ix Ix))) (Ic Int ((Constant Int)))))
(declare-var p Int)
(declare-var p2 Int)
(declare-var i2 Int)
(constraint (or (not (>= i2 0)) (= (max (+ i2 p) 0) (join1 p i2 0))))
(constraint (or (not (>= i2 0)) (= (max (+ (max (+ i2 p) 0) p2) 0) (join1 p i2 (max (+ 0 p2) 0)))))
(check-synth)
