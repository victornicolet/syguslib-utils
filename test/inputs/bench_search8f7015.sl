(set-logic LIA)
(synth-fun odot ((x0 Int) (x1 Int) (x2 Bool) (x3 Bool)) Bool ((Ipred Bool) (Ix Int) (Ic Int))
 ((Ipred Bool (x2 x3 (not Ipred) (and Ipred Ipred) (or Ipred Ipred) (= Ix Ix) (> Ix Ix)))
  (Ix Int (Ic x0 x1 (- Ix) (+ Ix Ix) (ite Ipred Ix Ix))) (Ic Int ((Constant Int)))))
(declare-var x Int)
(declare-var p Int)
(declare-var b Bool)
(constraint (= (ite (= p x) true b) (odot x p b false)))
(check-synth)
