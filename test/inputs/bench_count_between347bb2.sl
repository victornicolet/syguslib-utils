(set-logic LIA)
(synth-fun le_case ((x1 Int) (x2 Int) (x3 Bool) (x4 Bool)) Bool ((Ipred Bool) (Ix Int) (Ic Int))
 ((Ipred Bool (x3 x4 (not Ipred) (and Ipred Ipred) (or Ipred Ipred) (= Ix Ix) (> Ix Ix)))
  (Ix Int (Ic x1 x2 (- Ix) (+ Ix Ix) (ite Ipred Ix Ix))) (Ic Int ((Constant Int)))))
(declare-var lo Int)
(declare-var hi Int)
(declare-var i Int)
(declare-var b Bool)
(declare-var b0 Bool)
(constraint
 (or (not (not (>= i hi))) (= (or (and (< lo i) (< i hi)) (or b b0)) (le_case i lo b b0))))
(check-synth)
